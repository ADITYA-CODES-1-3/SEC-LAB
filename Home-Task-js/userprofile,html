<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile Project (Single File)</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; 
            background-color: #f0f2f5; 
            color: #333;
            padding: 2rem;
        }
        h1 { color: #1a1a1a; }
    </style>
</head>
<body>
    <h1>User Profile Module (Single File)</h1>
  

    <script>
        function validateEmail(email) {
            const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return regex.test(email);
        }

        class User {
            #name;
            #email;

            constructor(name, email) {
                this.#name = name;
                this.#email = email;
                console.log(`New user created: ${this.#name}`);
            }

            get name() {
                return this.#name;
            }

            set name(newName) {
                this.#name = newName.trim();
            }
            
            get email() {
                return this.#email;
            }
            
            set email(newEmail) {
                this.#email = newEmail;
            }

            logActivity(action) {
                console.log(`${this.#name} ${action}.`);
            }
        }

        console.log("--- Main script started ---");

        const user1 = new User('Alice', 'alice@example.com');
        const user2 = new User('  Bob  ', 'bob@invalid-email');

        console.log("\n--- 2. Using Getters ---");
        console.log(`User 1's name: ${user1.name}`);
        console.log(`User 2's name: ${user2.name}`);

        console.log("\n--- 3. Using Setters ---");
        user2.name = '  Bob  '; 
        console.log(`User 2's name after setter: ${user2.name}`);

        console.log("\n--- 4. Using the Prototype Method ---");
        user1.logActivity('logged in');
        user2.logActivity('updated their profile');

        console.log("\n--- 5. Using the Utility Function ---");
        const email1 = user1.email;
        const email2 = user2.email;
        console.log(`Is '${email1}' a valid email? ${validateEmail(email1)}`);
        console.log(`Is '${email2}' a valid email? ${validateEmail(email2)}`);

        console.log("\n--- Attempting to access private properties (will fail) ---");
        try {
            console.log(user1.#name);
        } catch (error) {
            console.error("Error trying to access private property #name:", error.message);
        }

        console.log("\n--- Sample Console Output Complete ---");
    </script>
</body>
</html>
